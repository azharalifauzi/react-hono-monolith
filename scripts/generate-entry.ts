import {
  existsSync,
  mkdirSync,
  readdirSync,
  statSync,
  writeFileSync,
} from 'node:fs'

const string = `/* NOTE: Do not edit this file, this file is auto generated */

import React from 'react'
import ReactDOM from 'react-dom/client'
import { RouterProvider, createBrowserRouter } from 'react-router-dom'
import routes from '.mrh/routes'

if (typeof document !== 'undefined') {
  const router = createBrowserRouter(routes)

  ReactDOM.hydrateRoot(
    document,
    <React.StrictMode>
      <RouterProvider router={router} />
    </React.StrictMode>
  )
}`

const stringError = `/* NOTE: Do not edit this file, this file is auto generated */

import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './page.tsx'

if (typeof document !== 'undefined') {

  ReactDOM.hydrateRoot(
    document,
    <React.StrictMode>
      <App />
    </React.StrictMode>
  )
}`

const dirs = readdirSync('src/views', { recursive: true })

dirs.forEach((dir) => {
  const stats = statSync(`src/views/${dir}`)
  if (stats.isDirectory()) {
    const entryDestination = `src/views/${dir}/entry.tsx`
    if (!existsSync(entryDestination)) {
      if (entryDestination === 'src/views/_error/entry.tsx') {
        writeFileSync(entryDestination, stringError, {
          encoding: 'utf-8',
        })
      } else {
        writeFileSync(entryDestination, string, {
          encoding: 'utf-8',
        })
      }
    }
  }
})

/**
 * create hmr script
 */

if (!existsSync('.mrh/hmr.ts')) {
  if (!existsSync('.mrh')) {
    mkdirSync('.mrh')
  }

  writeFileSync(
    '.mrh/hmr.ts',
    `// @ts-nocheck
import RefreshRuntime from 'http://localhost:4000/@react-refresh'

RefreshRuntime.injectIntoGlobalHook(window)
window.$RefreshReg$ = () => {}
window.$RefreshSig$ = () => (type) => type
window.__vite_plugin_react_preamble_installed__ = true`
  )
}
